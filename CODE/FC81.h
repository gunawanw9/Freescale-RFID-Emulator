/** ###################################################################
**     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**     Filename  : FC81.H
**     Project   : rfidEmulator
**     Processor : MC56F8006_32_LQFP
**     Component : FreeCntr8
**     Version   : Component 02.075, Driver 02.02, CPU db: 3.00.188
**     Compiler  : Metrowerks DSP C Compiler
**     Date/Time : 7/31/2010, 5:18 PM
**     Abstract  :
**         This device "FreeCntr8" implements 8-bit Free Running Counter
**     Settings  :
**         Timer name                  : TMR0 (16-bit)
**         Compare name                : TMR0_Compare
**         Counter shared              : No
**
**         High speed mode
**             Prescaler               : divide-by-1
**             Clock                   : 32000000 Hz
**           Resolution of timer
**             Xtal ticks              : 64
**             microseconds            : 8
**             seconds (real)          : 0.000008
**             Hz                      : 125000
**             kHz                     : 125
**
**         Initialization:
**              Timer                  : Enabled
**
**         Timer registers
**              Counter                : TMR0_CNTR [61445]
**              Mode                   : TMR0_CTRL [61446]
**              Run                    : TMR0_CTRL [61446]
**              Prescaler              : TMR0_CTRL [61446]
**
**         Compare registers
**              Compare                : TMR0_COMP1 [61440]
**     Contents  :
**         Reset     - byte FC81_Reset(void);
**         GetTimeUS - byte FC81_GetTimeUS(word *Time);
**         GetTimeMS - byte FC81_GetTimeMS(word *Time);
**
**     Copyright : 1997 - 2009 Freescale Semiconductor, Inc. All Rights Reserved.
**     
**     http      : www.freescale.com
**     mail      : support@freescale.com
** ###################################################################*/

#ifndef __FC81
#define __FC81

/* MODULE FC81. */

/*Include shared modules, which are used for whole project*/
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
#include "PE_Timer.h"
#include "Cpu.h"


byte FC81_Reset(void);
/*
** ===================================================================
**     Method      :  FC81_Reset (component FreeCntr8)
**
**     Description :
**         This method clears the counter.
**     Parameters  : None
**     Returns     :
**         ---             - Error code, possible codes:
**                           ERR_OK - OK
**                           ERR_SPEED - This device does not work in
**                           the active speed mode
** ===================================================================
*/

byte FC81_GetTimeUS(word *Time);
/*
** ===================================================================
**     Method      :  FC81_GetTimeUS (component FreeCntr8)
**
**     Description :
**         Returns the time (as a 16-bit unsigned integer) in microseconds
**         since the last resetting after the last reset.
**     Parameters  :
**         NAME            - DESCRIPTION
**       * Time            - A pointer to the returned 16-bit value
**                           in microseconds
**     Returns     :
**         ---             - Error code, possible codes:
**                           ERR_OK - OK
**                           ERR_SPEED - This device does not work in
**                           the active speed mode
**                           ERR_OVERFLOW - Software counter overflow
**                           ERR_MATH - Overflow during evaluation
** ===================================================================
*/

byte FC81_GetTimeMS(word *Time);
/*
** ===================================================================
**     Method      :  FC81_GetTimeMS (component FreeCntr8)
**
**     Description :
**         Returns the time (as a 16-bit unsigned integer) in milliseconds
**         since the last resetting after the last reset.
**     Parameters  :
**         NAME            - DESCRIPTION
**       * Time            - A pointer to the returned 16-bit value
**                           in milliseconds
**     Returns     :
**         ---             - Error code, possible codes:
**                           ERR_OK - OK
**                           ERR_SPEED - This device does not work in
**                           the active speed mode
**                           ERR_OVERFLOW - Software counter overflow
**                           ERR_MATH - Overflow during evaluation
** ===================================================================
*/

void FC81_Init(void);
/*
** ===================================================================
**     Method      :  FC81_Init (component FreeCntr8)
**
**     Description :
**         Initializes the associated peripheral(s) and the beans 
**         internal variables. The method is called automatically as a 
**         part of the application initialization code.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/

void FC81_Interrupt(void);
/*
** ===================================================================
**     Method      :  FC81_Interrupt (component FreeCntr8)
**
**     Description :
**         The method services the interrupt of the selected peripheral(s)
**         and eventually invokes the beans event(s).
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/

/* END FC81. */

#endif /* ifndef __FC81 */
/*
** ###################################################################
**
**     This file was created by Processor Expert 3.00 [04.35]
**     for the Freescale 56800 series of microcontrollers.
**
** ###################################################################
*/
